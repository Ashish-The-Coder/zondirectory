type _Schema_
  @fulltext(
    name: "fileSearch",
    language: en
    algorithm: rank,
    include: [
      {
        entity: "ItemUpdated",
        fields: [
          { name: "title" },
          { name: "description" },
        ]
      }
    ]
  )
  @fulltext(
    name: "linkSearch",
    language: en
    algorithm: rank,
    include: [
      {
        entity: "LinkUpdated",
        fields: [
          { name: "title" },
          { name: "description" },
        ]
      }
    ]
  )
  @fulltext(
    name: "categorySearch",
    language: en
    algorithm: rank,
    include: [
      {
        entity: "CategoryUpdated",
        fields: [
          { name: "title" },
        ]
      }
    ]
  )

type Approval @entity {
  id: ID!
  _owner: Bytes! # address
  _spender: Bytes! # address
  _value: BigInt! # uint256
}

type CategoryCreated @entity {
  id: ID!
  categoryId: BigInt! # uint256
  owner: Bytes! # address
}

type CategoryUpdated @entity {
  id: ID!
  categoryId: BigInt! # uint256
  title: String! # string
  locale: String! # string
}

type ItemCoverUpdated @entity {
  id: ID!
  itemId: BigInt! # uint256
  version: BigInt! # uint256
  cover: Bytes! # bytes
  width: BigInt! # uint256
  height: BigInt! # uint256
}

type ItemCreated @entity {
  id: ID!
  itemId: BigInt! # uint256
}

type ItemFilesUpdated @entity {
  id: ID!
  itemId: BigInt! # uint256
  format: String! # string
  version: BigInt! # uint256
  hash: String! # string
}

type SetLastItemVersion @entity {
  id: ID!
  itemId: BigInt! # uint256
  version: BigInt! # uint256
}

type ItemUpdated @entity {
  id: ID!
  itemId: BigInt! # uint256
  title: String! # string
  description: String! # string
  priceETH: BigInt! # uint256
  priceAR: BigInt! # uint256
  locale: String! # string
  license: String! # string
}

type LinkUpdated @entity {
  id: ID!
  linkId: BigInt! # uint256
  link: String! # string
  title: String! # string
  description: String! # string
  locale: String! # string
  linkKind: BigInt! # uint256
}

type SetARWallet @entity {
  id: ID!
  owner: Bytes! # address
  arWallet: String! # string
}

type SetAuthorInfo @entity {
  id: ID!
  owner: Bytes! # address
  description: String! # string
  locale: String! # string
}

type SetItemOwner @entity {
  id: ID!
  itemId: BigInt! # uint256
  owner: Bytes! # address
}

type SetOwner @entity {
  id: ID!
  owner: Bytes! # address
}

type SetSalesOwnerShare @entity {
  id: ID!
  share: BigInt! # int128
}

type SetUpvotesOwnerShare @entity {
  id: ID!
  share: BigInt! # int128
}

type SetUploadOwnerShare @entity {
  id: ID!
  share: BigInt! # int128
}

type Transfer @entity {
  id: ID!
  _from: Bytes! # address
  _to: Bytes! # address
  _value: BigInt! # uint256
}

type ChildParentVote @entity {
  id: ID!
  child: BigInt! # uint256
  parent: BigInt! # uint256
  value: BigInt! # int256
  featureLevel: BigInt! # int256
  primary: Boolean # bool
}

type Pay @entity {
  id: ID!
  payer: Bytes! # address
  payee: Bytes! # address
  itemId: BigInt! # uint256
  value: BigInt! # int256
}

type Donate @entity {
  id: ID!
  payer: Bytes! # address
  payee: Bytes! # address
  itemId: BigInt! # uint256
  value: BigInt! # int256
}
