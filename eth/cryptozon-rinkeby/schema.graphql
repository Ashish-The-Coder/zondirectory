type _Schema_
  @fulltext(
    name: "fileSearch",
    language: en
    algorithm: rank,
    include: [
      {
        entity: "ItemUpdated",
        fields: [
          { name: "title" },
          { name: "description" },
        ]
      }
    ]
  )
  @fulltext(
    name: "categorySearch",
    language: en
    algorithm: rank,
    include: [
      {
        entity: "CategoryCreated",
        fields: [
          { name: "title" },
        ]
      }
    ]
  )

type Approval @entity {
  id: ID!
  _owner: Bytes! # address
  _spender: Bytes! # address
  _value: BigInt! # uint256
}

type CategoryCreated @entity {
  id: ID!
  categoryId: BigInt! # uint256
  title: String! # string
  locale: String! # string
}

type ItemAdded @entity {
  id: ID!
  categoryId: BigInt! # uint256
  itemId: BigInt! # uint256
}

type ItemCreated @entity {
  id: ID!
  itemId: BigInt! # uint256
}

type ItemFilesUpdated @entity {
  id: ID!
  itemId: BigInt! # uint256
  format: String! # string
  version: BigInt! # uint256
}

type ItemUpdated @entity {
  id: ID!
  itemId: BigInt! # uint256
  title: String! # string
  description: String! # string
  priceETH: BigInt! # uint256
  priceAR: BigInt! # uint256
  locale: String! # string
  cover: Bytes! # bytes
}

type SetItemOwner @entity {
  id: ID!
  itemId: BigInt! # uint256
  address: Bytes! # address
}

type SubcategoryAdded @entity {
  id: ID!
  categoryId: BigInt! # uint256
  subId: BigInt! # uint256
}

type Transfer @entity {
  id: ID!
  _from: Bytes! # address
  _to: Bytes! # address
  _value: BigInt! # uint256
}

type Vote @entity {
  id: ID!
  child: BigInt! # uint256
  parent: BigInt! # uint256
  value: BigInt! # int256
}
